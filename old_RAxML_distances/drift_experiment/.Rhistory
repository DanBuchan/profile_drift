# number the IDs in the original data frame if there are character names
data$prot1 <- match(data$prot1, my.objects)
data$prot2 <- match(data$prot2, my.objects)
# Make a matrix of the right dimensions
n <- length(my.objects)
dist_mat <- matrix(NA, n, n)
# make a matrix of the IDs
i <- as.matrix(data[-3])
# cast the distances to the matrix
dist_mat[i] <- dist_mat[i[,2:1]] <- data$distance
#cast the matrix as a distance matrix
my.dist <- as.dist(dist_mat)
print(str(dist_mat))
# write.table(as.matrix(my.dist), file=paste("./dist.txt",sep=""), row.names=FALSE, col.names=FALSE)
#calculates x, y projects for the points,
# mds%points y axis is sorted in the order of the IDs my.objects
system('bash -c "java -jar /home/dbuchan/Downloads/mdsj.jar /home/dbuchan/data.txt /home/dbuchan/data-MDS.txt"')
mds = isoMDS(my.dist, k=2, maxit=1000, p=minkowski_power)
# labeling goes here, add a third colum to the mds matrix for the iteration membership
plot_df <- data.frame(x=mds$points[,1], y=mds$points[,2])
plot_df$labels <- labels$iteration[match(strtoi(rownames(plot_df)), labels$protID)]
plot_df[order(plot_df$labels, na.last=TRUE),]
# plot <- ggplot(plot_df, aes(x=x, y=y)) + geom_point()
blues20 <- colorRampPalette(brewer.pal(name="Blues", n = 9))(26)
plot <- ggplot(plot_df, aes(x=x, y=y, color=labels)) + geom_point(aes(colour = cut(labels, c(-Inf, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, Inf))), size = 2) + scale_color_manual(values=blues20[6:26])
return(plot)
}
plots <- project_distances(dist2, dist2_membership, 1)
project_distances <- function(data, labels, minkowski_power){
print(paste("Mean: ", mean(data$distance)))
print(paste("SD: ", sd(data$distance)))
# a list of the prot names in sorted order
my.objects <- sort(unique(c(as.character(data$prot1), as.character(data$prot2))))
# number the IDs in the original data frame if there are character names
data$prot1 <- match(data$prot1, my.objects)
data$prot2 <- match(data$prot2, my.objects)
# Make a matrix of the right dimensions
n <- length(my.objects)
dist_mat <- matrix(NA, n, n)
# make a matrix of the IDs
i <- as.matrix(data[-3])
# cast the distances to the matrix
dist_mat[i] <- dist_mat[i[,2:1]] <- data$distance
#cast the matrix as a distance matrix
my.dist <- as.dist(dist_mat)
write.table(as.matrix(my.dist), file=paste("./dist.txt",sep=""), row.names=FALSE, col.names=FALSE)
#calculates x, y projects for the points,
# mds%points y axis is sorted in the order of the IDs my.objects
system('bash -c "java -jar /home/dbuchan/Downloads/mdsj.jar /home/dbuchan/data.txt /home/dbuchan/data-MDS.txt"')
mds = isoMDS(my.dist, k=2, maxit=1000, p=minkowski_power)
# labeling goes here, add a third colum to the mds matrix for the iteration membership
plot_df <- data.frame(x=mds$points[,1], y=mds$points[,2])
plot_df$labels <- labels$iteration[match(strtoi(rownames(plot_df)), labels$protID)]
plot_df[order(plot_df$labels, na.last=TRUE),]
# plot <- ggplot(plot_df, aes(x=x, y=y)) + geom_point()
blues20 <- colorRampPalette(brewer.pal(name="Blues", n = 9))(26)
plot <- ggplot(plot_df, aes(x=x, y=y, color=labels)) + geom_point(aes(colour = cut(labels, c(-Inf, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, Inf))), size = 2) + scale_color_manual(values=blues20[6:26])
return(plot)
}
plots <- project_distances(dist2, dist2_membership, 1)
project_distances <- function(data, labels, minkowski_power){
print(paste("Mean: ", mean(data$distance)))
print(paste("SD: ", sd(data$distance)))
# a list of the prot names in sorted order
my.objects <- sort(unique(c(as.character(data$prot1), as.character(data$prot2))))
# number the IDs in the original data frame if there are character names
data$prot1 <- match(data$prot1, my.objects)
data$prot2 <- match(data$prot2, my.objects)
# Make a matrix of the right dimensions
n <- length(my.objects)
dist_mat <- matrix(NA, n, n)
# make a matrix of the IDs
i <- as.matrix(data[-3])
# cast the distances to the matrix
dist_mat[i] <- dist_mat[i[,2:1]] <- data$distance
#cast the matrix as a distance matrix
my.dist <- as.dist(dist_mat)
write.table(as.matrix(my.dist), file=paste("./dist.txt",sep=""), row.names=FALSE, col.names=FALSE)
#calculates x, y projects for the points,
# mds%points y axis is sorted in the order of the IDs my.objects
system('bash -c "java -jar /home/dbuchan/Downloads/mdsj.jar /home/dbuchan/dist.txt /home/dbuchan/dist-MDS.txt"')
mds = isoMDS(my.dist, k=2, maxit=1000, p=minkowski_power)
# labeling goes here, add a third colum to the mds matrix for the iteration membership
plot_df <- data.frame(x=mds$points[,1], y=mds$points[,2])
plot_df$labels <- labels$iteration[match(strtoi(rownames(plot_df)), labels$protID)]
plot_df[order(plot_df$labels, na.last=TRUE),]
# plot <- ggplot(plot_df, aes(x=x, y=y)) + geom_point()
blues20 <- colorRampPalette(brewer.pal(name="Blues", n = 9))(26)
plot <- ggplot(plot_df, aes(x=x, y=y, color=labels)) + geom_point(aes(colour = cut(labels, c(-Inf, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, Inf))), size = 2) + scale_color_manual(values=blues20[6:26])
return(plot)
}
plots <- project_distances(dist2, dist2_membership, 1)
project_distances <- function(data, labels, minkowski_power){
print(paste("Mean: ", mean(data$distance)))
print(paste("SD: ", sd(data$distance)))
# a list of the prot names in sorted order
my.objects <- sort(unique(c(as.character(data$prot1), as.character(data$prot2))))
# number the IDs in the original data frame if there are character names
data$prot1 <- match(data$prot1, my.objects)
data$prot2 <- match(data$prot2, my.objects)
# Make a matrix of the right dimensions
n <- length(my.objects)
dist_mat <- matrix(NA, n, n)
# make a matrix of the IDs
i <- as.matrix(data[-3])
# cast the distances to the matrix
dist_mat[i] <- dist_mat[i[,2:1]] <- data$distance
#cast the matrix as a distance matrix
my.dist <- as.dist(dist_mat)
write.table(as.matrix(my.dist), file=paste("./dist.txt",sep=""), row.names=FALSE, col.names=FALSE)
#calculates x, y projects for the points,
# mds%points y axis is sorted in the order of the IDs my.objects
system('bash -c "java -jar /home/dbuchan/Downloads/mdsj.jar /home/dbuchan/dist.txt /home/dbuchan/dist-MDS.txt"')
# mds = isoMDS(my.dist, k=2, maxit=1000, p=minkowski_power)
jmds <- as.matrix(read.table("./MDS/data-MDS.txt",header=FALSE,sep=" "))
# labeling goes here, add a third colum to the mds matrix for the iteration membership
plot_df <- data.frame(x=jmds[,1], y=jmds[,2])
plot_df$labels <- labels$iteration[match(strtoi(rownames(plot_df)), labels$protID)]
plot_df[order(plot_df$labels, na.last=TRUE),]
# plot <- ggplot(plot_df, aes(x=x, y=y)) + geom_point()
blues20 <- colorRampPalette(brewer.pal(name="Blues", n = 9))(26)
plot <- ggplot(plot_df, aes(x=x, y=y, color=labels)) + geom_point(aes(colour = cut(labels, c(-Inf, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, Inf))), size = 2) + scale_color_manual(values=blues20[6:26])
return(plot)
}
plots <- project_distances(dist2, dist2_membership, 1)
project_distances <- function(data, labels, minkowski_power){
print(paste("Mean: ", mean(data$distance)))
print(paste("SD: ", sd(data$distance)))
# a list of the prot names in sorted order
my.objects <- sort(unique(c(as.character(data$prot1), as.character(data$prot2))))
# number the IDs in the original data frame if there are character names
data$prot1 <- match(data$prot1, my.objects)
data$prot2 <- match(data$prot2, my.objects)
# Make a matrix of the right dimensions
n <- length(my.objects)
dist_mat <- matrix(NA, n, n)
# make a matrix of the IDs
i <- as.matrix(data[-3])
# cast the distances to the matrix
dist_mat[i] <- dist_mat[i[,2:1]] <- data$distance
#cast the matrix as a distance matrix
my.dist <- as.dist(dist_mat)
write.table(as.matrix(my.dist), file=paste("./dist.txt",sep=""), row.names=FALSE, col.names=FALSE)
#calculates x, y projects for the points,
# mds%points y axis is sorted in the order of the IDs my.objects
system('bash -c "java -jar /home/dbuchan/Downloads/mdsj.jar /home/dbuchan/dist.txt /home/dbuchan/dist-MDS.txt"')
# mds = isoMDS(my.dist, k=2, maxit=1000, p=minkowski_power)
jmds <- as.matrix(read.table("/home/dbuchan/data-MDS.txt",header=FALSE,sep=" "))
# labeling goes here, add a third colum to the mds matrix for the iteration membership
plot_df <- data.frame(x=jmds[,1], y=jmds[,2])
plot_df$labels <- labels$iteration[match(strtoi(rownames(plot_df)), labels$protID)]
plot_df[order(plot_df$labels, na.last=TRUE),]
# plot <- ggplot(plot_df, aes(x=x, y=y)) + geom_point()
blues20 <- colorRampPalette(brewer.pal(name="Blues", n = 9))(26)
plot <- ggplot(plot_df, aes(x=x, y=y, color=labels)) + geom_point(aes(colour = cut(labels, c(-Inf, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, Inf))), size = 2) + scale_color_manual(values=blues20[6:26])
return(plot)
}
plots <- project_distances(dist2, dist2_membership, 1)
project_distances <- function(data, labels, minkowski_power){
print(paste("Mean: ", mean(data$distance)))
print(paste("SD: ", sd(data$distance)))
# a list of the prot names in sorted order
my.objects <- sort(unique(c(as.character(data$prot1), as.character(data$prot2))))
# number the IDs in the original data frame if there are character names
data$prot1 <- match(data$prot1, my.objects)
data$prot2 <- match(data$prot2, my.objects)
# Make a matrix of the right dimensions
n <- length(my.objects)
dist_mat <- matrix(NA, n, n)
# make a matrix of the IDs
i <- as.matrix(data[-3])
# cast the distances to the matrix
dist_mat[i] <- dist_mat[i[,2:1]] <- data$distance
#cast the matrix as a distance matrix
my.dist <- as.dist(dist_mat)
write.table(as.matrix(my.dist), file=paste("./dist.txt",sep=""), row.names=FALSE, col.names=FALSE)
#calculates x, y projects for the points,
# mds%points y axis is sorted in the order of the IDs my.objects
system('bash -c "java -jar /home/dbuchan/Downloads/mdsj.jar /home/dbuchan/dist.txt /home/dbuchan/dist-MDS.txt"')
# mds = isoMDS(my.dist, k=2, maxit=1000, p=minkowski_power)
jmds <- as.matrix(read.table("/home/dbuchan/dist-MDS.txt",header=FALSE,sep=" "))
# labeling goes here, add a third colum to the mds matrix for the iteration membership
plot_df <- data.frame(x=jmds[,1], y=jmds[,2])
plot_df$labels <- labels$iteration[match(strtoi(rownames(plot_df)), labels$protID)]
plot_df[order(plot_df$labels, na.last=TRUE),]
# plot <- ggplot(plot_df, aes(x=x, y=y)) + geom_point()
blues20 <- colorRampPalette(brewer.pal(name="Blues", n = 9))(26)
plot <- ggplot(plot_df, aes(x=x, y=y, color=labels)) + geom_point(aes(colour = cut(labels, c(-Inf, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, Inf))), size = 2) + scale_color_manual(values=blues20[6:26])
return(plot)
}
plots <- project_distances(dist2, dist2_membership, 1)
plots
project_distances <- function(data, labels, minkowski_power){
print(paste("Mean: ", mean(data$distance)))
print(paste("SD: ", sd(data$distance)))
# a list of the prot names in sorted order
my.objects <- sort(unique(c(as.character(data$prot1), as.character(data$prot2))))
# number the IDs in the original data frame if there are character names
data$prot1 <- match(data$prot1, my.objects)
data$prot2 <- match(data$prot2, my.objects)
# Make a matrix of the right dimensions
n <- length(my.objects)
dist_mat <- matrix(NA, n, n)
# make a matrix of the IDs
i <- as.matrix(data[-3])
# cast the distances to the matrix
dist_mat[i] <- dist_mat[i[,2:1]] <- data$distance
#cast the matrix as a distance matrix
my.dist <- as.dist(dist_mat)
write.table(as.matrix(my.dist), file=paste("./dist.txt",sep=""), row.names=FALSE, col.names=FALSE)
#calculates x, y projects for the points,
# mds%points y axis is sorted in the order of the IDs my.objects
# build plot_df with isoMDS
# mds = isoMDS(my.dist, k=2, maxit=1000, p=minkowski_power)
# plot_df <- data.frame(x=mds$points[,1], y=mds$points[,2])
# build plot_df with mdsj
write.table(as.matrix(my.dist), file=paste("./dist.txt",sep=""), row.names=FALSE, col.names=FALSE)
system('bash -c "java -jar /home/dbuchan/Downloads/mdsj.jar /home/dbuchan/dist.txt /home/dbuchan/dist-MDS.txt"')
jmds <- as.(read.table("/home/dbuchan/dist-MDS.txt",header=FALSE,sep=" "))
plot_df <- data.frame(x=jmds[,1], y=jmds[,2])
# labeling goes here, add a third colum to the mds matrix for the iteration membership
plot_df$labels <- labels$iteration[match(strtoi(rownames(plot_df)), labels$protID)]
plot_df[order(plot_df$labels, na.last=TRUE),]
# plot <- ggplot(plot_df, aes(x=x, y=y)) + geom_point()
blues20 <- colorRampPalette(brewer.pal(name="Blues", n = 9))(26)
plot <- ggplot(plot_df, aes(x=x, y=y, color=labels)) + geom_point(aes(colour = cut(labels, c(-Inf, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, Inf))), size = 2) + scale_color_manual(values=blues20[6:26])
return(plot)
}
plots <- project_distances(dist2, dist2_membership, 1)
project_distances <- function(data, labels, minkowski_power){
print(paste("Mean: ", mean(data$distance)))
print(paste("SD: ", sd(data$distance)))
# a list of the prot names in sorted order
my.objects <- sort(unique(c(as.character(data$prot1), as.character(data$prot2))))
# number the IDs in the original data frame if there are character names
data$prot1 <- match(data$prot1, my.objects)
data$prot2 <- match(data$prot2, my.objects)
# Make a matrix of the right dimensions
n <- length(my.objects)
dist_mat <- matrix(NA, n, n)
# make a matrix of the IDs
i <- as.matrix(data[-3])
# cast the distances to the matrix
dist_mat[i] <- dist_mat[i[,2:1]] <- data$distance
#cast the matrix as a distance matrix
my.dist <- as.dist(dist_mat)
write.table(as.matrix(my.dist), file=paste("./dist.txt",sep=""), row.names=FALSE, col.names=FALSE)
#calculates x, y projects for the points,
# mds%points y axis is sorted in the order of the IDs my.objects
# build plot_df with isoMDS
# mds = isoMDS(my.dist, k=2, maxit=1000, p=minkowski_power)
# plot_df <- data.frame(x=mds$points[,1], y=mds$points[,2])
# build plot_df with mdsj
write.table(as.matrix(my.dist), file=paste("./dist.txt",sep=""), row.names=FALSE, col.names=FALSE)
system('bash -c "java -jar /home/dbuchan/Downloads/mdsj.jar /home/dbuchan/dist.txt /home/dbuchan/dist-MDS.txt"')
jmds <- as.matrix(read.table("/home/dbuchan/dist-MDS.txt",header=FALSE,sep=" "))
plot_df <- data.frame(x=jmds[,1], y=jmds[,2])
# labeling goes here, add a third colum to the mds matrix for the iteration membership
plot_df$labels <- labels$iteration[match(strtoi(rownames(plot_df)), labels$protID)]
plot_df[order(plot_df$labels, na.last=TRUE),]
# plot <- ggplot(plot_df, aes(x=x, y=y)) + geom_point()
blues20 <- colorRampPalette(brewer.pal(name="Blues", n = 9))(26)
plot <- ggplot(plot_df, aes(x=x, y=y, color=labels)) + geom_point(aes(colour = cut(labels, c(-Inf, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, Inf))), size = 2) + scale_color_manual(values=blues20[6:26])
return(plot)
}
plots <- project_distances(dist2, dist2_membership, 1)
plots
plots
ggsave("/home/dbuchan/Projects/profile_drift/plots/dist_experiment_20_iterations.png", dpi=100, width=800, height=600, units="px")
library(ggplot2)
ggsave("/home/dbuchan/Projects/profile_drift/plots/dist_experiment_20_iterations.png", dpi=100, width=800, height=600, units="px")
library(ggplot2)
library(modeest)
cath_hfamily_distances <- read.csv("/home/dbuchan/Projects/drift/average_cath_distances.csv", header=F)
colnames(cath_hfamily_distances) <- c("dist_file", "blosum_distance")
cath_hfamily_distances <- cath_hfamily_distances[-c(1883),]
mean(cath_hfamily_distances$blosum_distance)
median(cath_hfamily_distances$blosum_distance)
mode(cath_hfamily_distances$blosum_distance)
mlv(cath_hfamily_distances$blosum_distance, method = "meanshift") # 1.6
ggplot(cath_hfamily_distances, aes(x=blosum_distance)) + geom_histogram()
library(ggplot2)
library(reshape2)
distance2_500_1000 <- read.csv("/home/dbuchan/Projects/profile_drift/RAxML_distances/drift_experiment/average_distances2_500cluster_1000cluster.csv", header=T)
View(distance2_500_1000)
ggplot(distance2_500_1000, aes(x=iteration, y=tot_distance) + geom_point() + geom_line()
)
ggplot(distance2_500_1000, aes(x=iteration, y=tot_distance)) + geom_point() + geom_line()
ggplot(distance2_500_1000, aes(x=iteration, y=member_count)) + geom_point() + geom_line()
ggplot(distance2_500_1000, aes(x=iteration, y=average_distance)) + geom_point() + geom_line()
ggplot(distance2_500_1000, aes(x=iteration, y=average_distance)) + geom_point() + geom_line()
ggplot(distance2_500_1000, aes(x=iteration, y=ave_distance)) + geom_point() + geom_line()
average_distances <- read.csv("/home/dbuchan/Projects/profile_drift/RAxML_distances/random_pathing/blasts/average_distances.csv", header=T)
average_distances$accumulated <- c(average_distances[1,2], 0, 0,0,0)
average_distances[2,3] <- (average_distances[1,3] + average_distances[2,2])/2
average_distances[3,3] <- (average_distances[2,3] + average_distances[3,2])/2
average_distances[4,3] <- (average_distances[3,3] + average_distances[4,2])/2
average_distances[5,3] <- (average_distances[4,3] + average_distances[5,2])/2
ggplot(average_distances, aes(x=iteration, y=ave_distance)) + geom_line()
ggplot(average_distances, aes(x=iteration, y=accumulated)) + geom_line()
distances2 <- read.csv("/home/dbuchan/Projects/profile_drift/RAxML_distances/distance_experiment/average_distances2.csv", header=T)
distances5 <- read.csv("/home/dbuchan/Projects/profile_drift/RAxML_distances/distance_experiment/average_distances5.csv", header=T)
distances10 <- read.csv("/home/dbuchan/Projects/profile_drift/RAxML_distances/distance_experiment/average_distances10.csv", header=T)
distances20 <- read.csv("/home/dbuchan/Projects/profile_drift/RAxML_distances/distance_experiment/average_distances20.csv", header=T)
distances30 <- read.csv("/home/dbuchan/Projects/profile_drift/RAxML_distances/distance_experiment/average_distances30.csv", header=T)
distances40 <- read.csv("/home/dbuchan/Projects/profile_drift/RAxML_distances/distance_experiment/average_distances40.csv", header=T)
distances50 <- read.csv("/home/dbuchan/Projects/profile_drift/RAxML_distances/distance_experiment/average_distances50.csv", header=T)
all_distances <- data.frame(iteration=distances2$iteration, dist2=distances2$ave_distance, dist5=distances5$ave_distance, dist10=distances10$ave_distance, dist20=distances20$ave_distance, dist30=distances30$ave_distance, dist40=distances40$ave_distance, dist50=distances50$ave_distance)
plot_df <- melt(all_distances, id.vars="iteration")
ggplot(plot_df, aes(x=iteration, y=value, col=variable)) + geom_point() + geom_line()
ggsave("/home/dbuchan/Projects/profile_drift/plots/family_growth_at_ave_distances.png", dpi=100, width=800, height=600, units="px")
tot_distances <- data.frame(iteration=distances2$iteration, tot2=distances2$tot_distance, tot5=distances5$tot_distance, tot10=distances10$tot_distance, tot20=distances20$tot_distance, tot30=distances30$tot_distance, tot40=distances40$tot_distance, tot50=distances50$tot_distance)
plot_df <- melt(tot_distances, id.vars="iteration")
ggplot(plot_df, aes(x=iteration, y=value, col=variable)) + geom_point() + geom_line()
ggsave("/home/dbuchan/Projects/profile_drift/plots/family_growth_at_tot_distances.png", dpi=100, width=800, height=600, units="px")
members <- data.frame(iteration=distances2$iteration, memb2=distances2$member_count, memb5=distances5$member_count, memb10=distances10$member_count, memb20=distances20$member_count, memb30=distances30$member_count, memb40=distances40$member_count, memb50=distances50$member_count)
plot_df <- melt(members, id.vars="iteration")
ggplot(plot_df, aes(x=iteration, y=value, col=variable)) + geom_point() + geom_line()
ggsave("/home/dbuchan/Projects/profile_drift/plots/members_growth_at_iteration.png", dpi=100, width=800, height=600, units="px")
distance2_500_1000 <- read.csv("/home/dbuchan/Projects/profile_drift/RAxML_distances/drift_experiment/average_distances2_500cluster_1000cluster.csv", header=T)
library(ggplot2)
library(reshape2)
distance2_500_1000 <- read.csv("/home/dbuchan/Projects/profile_drift/RAxML_distances/drift_experiment/average_distances30_7cluster_17cluster.csv", header=T)
ggplot(distance2_500_1000, aes(x=iteration, y=tot_distance)) + geom_point() + geom_line()
ggplot(distance2_500_1000, aes(x=iteration, y=member_count)) + geom_point() + geom_line()
ggplot(distance2_500_1000, aes(x=iteration, y=ave_distance)) + geom_point() + geom_line()
distance2_500_1000 <- read.csv("/home/dbuchan/Projects/profile_drift/RAxML_distances/drift_experiment/average_distances30_7cluster_70cluster.csv", header=T)
ggplot(distance2_500_1000, aes(x=iteration, y=tot_distance)) + geom_point() + geom_line()
ggplot(distance2_500_1000, aes(x=iteration, y=member_count)) + geom_point() + geom_line()
ggplot(distance2_500_1000, aes(x=iteration, y=ave_distance)) + geom_point() + geom_line()
distance2_500_1000 <- read.csv("/home/dbuchan/Projects/profile_drift/RAxML_distances/drift_experiment/distance50_4cluster_24cluster.fa", header=T)
ggplot(distance2_500_1000, aes(x=iteration, y=tot_distance)) + geom_point() + geom_line()
ggplot(distance2_500_1000, aes(x=iteration, y=tot_distance)) + geom_point() + geom_line()
distance2_500_1000 <- read.csv("/home/dbuchan/Projects/profile_drift/RAxML_distances/drift_experiment/distance50_4cluster_24cluster.fa", header=T)
ggplot(distance2_500_1000, aes(x=iteration, y=tot_distance)) + geom_point() + geom_line()
distance2_500_1000 <- read.csv("/home/dbuchan/Projects/profile_drift/RAxML_distances/drift_experiment/distance50_4cluster_24cluster.fa", header=T)
View(distance2_500_1000)
View(distance2_500_1000)
s
distance2_500_1000 <- read.csv("/home/dbuchan/Projects/profile_drift/RAxML_distances/drift_experiment/average_distances50_4cluster_24cluster.csv", header=T)
ggplot(distance2_500_1000, aes(x=iteration, y=tot_distance)) + geom_point() + geom_line()
ggplot(distance2_500_1000, aes(x=iteration, y=member_count)) + geom_point() + geom_line()
ggplot(distance2_500_1000, aes(x=iteration, y=ave_distance)) + geom_point() + geom_line()
distance2_500_1000 <- read.csv("/home/dbuchan/Projects/profile_drift/RAxML_distances/drift_experiment/average_distances10_23cluster_103cluster.csv", header=T)
ggplot(distance2_500_1000, aes(x=iteration, y=tot_distance)) + geom_point() + geom_line()
library(ggplot2)
library(reshape2)
distance2_500_1000 <- read.csv("/home/dbuchan/Projects/profile_drift/RAxML_distances/drift_experiment/average_distances10_23cluster_103cluster.csv", header=T)
ggplot(distance2_500_1000, aes(x=iteration, y=tot_distance)) + geom_point() + geom_line()
ggplot(distance2_500_1000, aes(x=iteration, y=member_count)) + geom_point() + geom_line()
path <- "/home/dbuchan/Projects/profile_drift/RAxML_distances/drift_experiment/"
files <- Sys.glob(cat(path, "average_distances10*"))
files <- Sys.glob(paste(path, "average_distances10*"))
files
paste(path, "average_distances10*")
files <- Sys.glob(paste(path, "average_distances10*"), sep='')
files <- Sys.glob(paste(path, "average_distances10*"), sep="")
files <- Sys.glob(paste(path, "average_distances10*", sep=""))
files
ldf <- lapply(files, read.csv)
ldf
ldf[0]
ldf[1]
ldf[[1]]
files
d
ldf[[1]]$dist <- 103
ldf[[1]]
ldf
files
ldf
ldf[[1]]$dist <- 103
ldf[[2]]$dist <- 121
ldf[[3]]$dist <- 141
ldf[[4]]$dist <- 158
ldf[[5]]$dist <- 174
ldf[[6]]$dist <- 196
ldf[[7]]$dist <- 213
ldf[[8]]$dist <- 55
ldf[[9]]$dist <- 81
ldf
new <- rbind(ldf[[8]], ldf[[9]])
new
new <- rbind(ldf[[8]], ldf[[9]], ldf[[1]], ldf[[2]], ldf[[3]], ldf[[4]], ldf[[5]], ldf[[6]], ldf[[7]])
new
ten_distances <- rbind(ldf[[8]], ldf[[9]], ldf[[1]], ldf[[2]], ldf[[3]], ldf[[4]], ldf[[5]], ldf[[6]], ldf[[7]])
ggplot(distance2_500_1000, aes(x=iteration, y=member_count, group_by=dist) + geom_point() + geom_line()
)
ggplot(distance2_500_1000, aes(x=iteration, y=member_count, group_by=dist)) + geom_point() + geom_line()
ggplot(distance2_500_1000, aes(x=iteration, y=member_count, group=dist))+ geom_point() + geom_line()
ggplot(ten_distances, aes(x=iteration, y=member_count, group=dist))+ geom_point() + geom_line()
ggplot(ten_distances, aes(x=iteration, y=member_count, group_by=dist))+ geom_point() + geom_line()
ggplot(ten_distances, aes(x=iteration, y=member_count, group=dist, colour=dist))+ geom_point() + geom_line()
ggplot(ten_distances, aes(x=iteration, y=member_count, colour=dist))+ geom_point() + geom_line()
ten_distances$dist <- as.factor(ten_distances$dist)
ggplot(ten_distances, aes(x=iteration, y=member_count, group=dist, colour=dist))+ geom_point() + geom_line()
files <- Sys.glob(paste(path, "average_distances20*", sep=""))
ldf <- lapply(files, read.csv)
files <- Sys.glob(paste(path, "average_distances20*", sep=""))
ldf <- lapply(files, read.csv)
ldf[[1]]$dist <- 102
ldf[[2]]$dist <- 21
ldf[[3]]$dist <- 35
ldf[[4]]$dist <- 46
ldf[[5]]$dist <- 58
ldf[[6]]$dist <- 70
ldf[[7]]$dist <- 77
ldf[[8]]$dist <- 86
ldf[[9]]$dist <- 94
twenty_distances <- rbind(ldf[[2]], ldf[[3]], ldf[[4]], ldf[[5]], ldf[[6]], ldf[[7]], ldf[[8]], ldf[[9]], ldf[[1]])
twenty_distances$dist <- as.factor(twenty_distances$dist)
ggplot(twenty_distances, aes(x=iteration, y=member_count, group=dist, colour=dist))+ geom_point() + geom_line()
files <- Sys.glob(paste(path, "average_distances30*", sep=""))
ldf <- lapply(files, read.csv)
ldf[[1]]$dist <- 17
ldf[[2]]$dist <- 26
ldf[[3]]$dist <- 35
ldf[[4]]$dist <- 38
ldf[[5]]$dist <- 45
ldf[[6]]$dist <- 53
ldf[[7]]$dist <- 61
ldf[[8]]$dist <- 65
ldf[[9]]$dist <- 70
thirty_distances <- rbind(ldf[[1]], ldf[[2]], ldf[[3]], ldf[[4]], ldf[[5]], ldf[[6]], ldf[[7]], ldf[[8]], ldf[[9]])
thirty_distances$dist <- as.factor(thirty_distances$dist)
ggplot(thirty_distances, aes(x=iteration, y=member_count, group=dist, colour=dist))+ geom_point() + geom_line()
files <- Sys.glob(paste(path, "average_distances40*", sep=""))
ldf <- lapply(files, read.csv)
ldf[[1]]$dist <- 12
ldf[[2]]$dist <- 18
ldf[[3]]$dist <- 25
ldf[[4]]$dist <- 27
ldf[[5]]$dist <- 31
ldf[[6]]$dist <- 35
ldf[[7]]$dist <- 39
forty_distances <- rbind(ldf[[1]], ldf[[2]], ldf[[3]], ldf[[4]], ldf[[5]], ldf[[6]], ldf[[7]])
forty_distances$dist <- as.factor(forty_distances$dist)
ggplot(forrty_distances, aes(x=iteration, y=member_count, group=dist, colour=dist))+ geom_point() + geom_line()
files <- Sys.glob(paste(path, "average_distances40*", sep=""))
ldf <- lapply(files, read.csv)
ldf[[1]]$dist <- 12
ldf[[2]]$dist <- 18
ldf[[3]]$dist <- 25
ldf[[4]]$dist <- 27
ldf[[5]]$dist <- 31
ldf[[6]]$dist <- 35
ldf[[7]]$dist <- 39
forty_distances <- rbind(ldf[[1]], ldf[[2]], ldf[[3]], ldf[[4]], ldf[[5]], ldf[[6]], ldf[[7]])
forty_distances$dist <- as.factor(forty_distances$dist)
ggplot(forty_distances, aes(x=iteration, y=member_count, group=dist, colour=dist))+ geom_point() + geom_line()
files <- Sys.glob(paste(path, "average_distances50*", sep=""))
ldf <- lapply(files, read.csv)
ldf[[1]]$dist <- 12
ldf[[2]]$dist <- 16
ldf[[3]]$dist <- 29
ldf[[4]]$dist <- 21
ldf[[5]]$dist <- 24
ldf[[6]]$dist <- 8
fifty_distances <- rbind(ldf[[6]], ldf[[1]], ldf[[2]], ldf[[3]], ldf[[4]], ldf[[5]])
fifty_distances$dist <- as.factor(fifty_distances$dist)
ggplot(fifty_distances, aes(x=iteration, y=member_count, group=dist, colour=dist))+ geom_point() + geom_line()
path <- "/home/dbuchan/Projects/profile_drift/RAxML_distances/drift_experiment/"
files <- Sys.glob(paste(path, "average_distances10*", sep=""))
ldf <- lapply(files, read.csv)
ldf[[1]]$dist <- 103
ldf[[2]]$dist <- 121
ldf[[3]]$dist <- 141
ldf[[4]]$dist <- 158
ldf[[5]]$dist <- 174
ldf[[6]]$dist <- 196
ldf[[7]]$dist <- 213
ldf[[8]]$dist <- 55
ldf[[9]]$dist <- 81
ten_distances <- rbind(ldf[[8]], ldf[[9]], ldf[[1]], ldf[[2]], ldf[[3]], ldf[[4]], ldf[[5]], ldf[[6]], ldf[[7]])
ten_distances$dist <- as.factor(ten_distances$dist)
ggplot(ten_distances, aes(x=iteration, y=member_count, group=dist, colour=dist))+ geom_point() + geom_line()
library(ggplot2)
library(reshape2)
path <- "/home/dbuchan/Projects/profile_drift/RAxML_distances/drift_experiment/"
files <- Sys.glob(paste(path, "average_distances10*", sep=""))
ldf <- lapply(files, read.csv)
ldf[[1]]$dist <- 103
ldf[[2]]$dist <- 121
ldf[[3]]$dist <- 141
ldf[[4]]$dist <- 158
ldf[[5]]$dist <- 174
ldf[[6]]$dist <- 196
ldf[[7]]$dist <- 213
ldf[[8]]$dist <- 55
ldf[[9]]$dist <- 81
ten_distances <- rbind(ldf[[8]], ldf[[9]], ldf[[1]], ldf[[2]], ldf[[3]], ldf[[4]], ldf[[5]], ldf[[6]], ldf[[7]])
ten_distances$dist <- as.factor(ten_distances$dist)
ggplot(ten_distances, aes(x=iteration, y=member_count, group=dist, colour=dist))+ geom_point() + geom_line()
setwd("/home/dbuchan/Projects/profile_drift/RAxML_distances/drift_experiment/")
files <- Sys.glob("*.membercount")
draw_member_chart <- function(file){
member_count <- read.csv(file, header=T)
long_counts <- gather(member_count, class, count, background:first:second, factor_key=TRUE)
ggplot(data=long_counts, aes(x=iteration, y=count, fill=class)) + geom_bar(stat="identity")+labs(title=file)
}
lapply(files, draw_member_chart)
library(ggplot2)
library(reshape2)
library(tidyr)
setwd("/home/dbuchan/Projects/profile_drift/RAxML_distances/drift_experiment/")
files <- Sys.glob("*.membercount")
draw_member_chart <- function(file){
member_count <- read.csv(file, header=T)
long_counts <- gather(member_count, class, count, background:first:second, factor_key=TRUE)
ggplot(data=long_counts, aes(x=iteration, y=count, fill=class)) + geom_bar(stat="identity")+labs(title=file)
}
lapply(files, draw_member_chart)
