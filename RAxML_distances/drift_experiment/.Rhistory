write.table(as.matrix(my.dist), file=paste("./dist.txt",sep=""), row.names=FALSE, col.names=FALSE)
#calculates x, y projects for the points,
# mds%points y axis is sorted in the order of the IDs my.objects
mds = isoMDS(my.dist, k=2, maxit=1000, p=minkowski_power)
# labeling goes here, add a third colum to the mds matrix for the iteration membership
plot_df <- data.frame(x=mds$points[,1], y=mds$points[,2])
plot_df$labels <- labels$iteration[match(strtoi(rownames(plot_df)), labels$protID)]
plot_df[order(plot_df$labels, na.last=TRUE),]
# plot <- ggplot(plot_df, aes(x=x, y=y)) + geom_point()
blues20 <- colorRampPalette(brewer.pal(name="Blues", n = 9))(26)
plot <- ggplot(plot_df, aes(x=x, y=y, color=labels)) + geom_point(aes(colour = cut(labels, c(-Inf, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, Inf))), size = 2) + scale_color_manual(values=blues20[6:26])
return(plot)
}
plots <- project_distances(dist2, dist2_membership, 1)
dim(x)
project_distances <- function(data, labels, minkowski_power){
print(paste("Mean: ", mean(data$distance)))
print(paste("SD: ", sd(data$distance)))
# a list of the prot names in sorted order
my.objects <- sort(unique(c(as.character(data$prot1), as.character(data$prot2))))
# number the IDs in the original data frame if there are character names
data$prot1 <- match(data$prot1, my.objects)
data$prot2 <- match(data$prot2, my.objects)
# Make a matrix of the right dimensions
n <- length(my.objects)
dist_mat <- matrix(NA, n, n)
# make a matrix of the IDs
i <- as.matrix(data[-3])
# cast the distances to the matrix
dist_mat[i] <- dist_mat[i[,2:1]] <- data$distance
print(dim(dist_mat()
#cast the matrix as a distance matrix
my.dist <- as.dist(dist_mat)
# write.table(as.matrix(my.dist), file=paste("./dist.txt",sep=""), row.names=FALSE, col.names=FALSE)
#calculates x, y projects for the points,
# mds%points y axis is sorted in the order of the IDs my.objects
mds = isoMDS(my.dist, k=2, maxit=1000, p=minkowski_power)
# labeling goes here, add a third colum to the mds matrix for the iteration membership
plot_df <- data.frame(x=mds$points[,1], y=mds$points[,2])
plot_df$labels <- labels$iteration[match(strtoi(rownames(plot_df)), labels$protID)]
plot_df[order(plot_df$labels, na.last=TRUE),]
# plot <- ggplot(plot_df, aes(x=x, y=y)) + geom_point()
blues20 <- colorRampPalette(brewer.pal(name="Blues", n = 9))(26)
plot <- ggplot(plot_df, aes(x=x, y=y, color=labels)) + geom_point(aes(colour = cut(labels, c(-Inf, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, Inf))), size = 2) + scale_color_manual(values=blues20[6:26])
return(plot)
}
project_distances <- function(data, labels, minkowski_power){
print(paste("Mean: ", mean(data$distance)))
print(paste("SD: ", sd(data$distance)))
# a list of the prot names in sorted order
my.objects <- sort(unique(c(as.character(data$prot1), as.character(data$prot2))))
# number the IDs in the original data frame if there are character names
data$prot1 <- match(data$prot1, my.objects)
data$prot2 <- match(data$prot2, my.objects)
# Make a matrix of the right dimensions
n <- length(my.objects)
dist_mat <- matrix(NA, n, n)
# make a matrix of the IDs
i <- as.matrix(data[-3])
# cast the distances to the matrix
dist_mat[i] <- dist_mat[i[,2:1]] <- data$distance
print(dim(dist_mat))
#cast the matrix as a distance matrix
my.dist <- as.dist(dist_mat)
# write.table(as.matrix(my.dist), file=paste("./dist.txt",sep=""), row.names=FALSE, col.names=FALSE)
#calculates x, y projects for the points,
# mds%points y axis is sorted in the order of the IDs my.objects
mds = isoMDS(my.dist, k=2, maxit=1000, p=minkowski_power)
# labeling goes here, add a third colum to the mds matrix for the iteration membership
plot_df <- data.frame(x=mds$points[,1], y=mds$points[,2])
plot_df$labels <- labels$iteration[match(strtoi(rownames(plot_df)), labels$protID)]
plot_df[order(plot_df$labels, na.last=TRUE),]
# plot <- ggplot(plot_df, aes(x=x, y=y)) + geom_point()
blues20 <- colorRampPalette(brewer.pal(name="Blues", n = 9))(26)
plot <- ggplot(plot_df, aes(x=x, y=y, color=labels)) + geom_point(aes(colour = cut(labels, c(-Inf, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, Inf))), size = 2) + scale_color_manual(values=blues20[6:26])
return(plot)
}
plots <- project_distances(dist2, dist2_membership, 1)
str(x)
str(x_dist)
str(x_dist$dist)
str(x_dist[0])
str(x_dist[1])
str(x_dist[1:10000])
x_dist[1:10000])
x_dist[1:10000]
project_distances <- function(data, labels, minkowski_power){
print(paste("Mean: ", mean(data$distance)))
print(paste("SD: ", sd(data$distance)))
# a list of the prot names in sorted order
my.objects <- sort(unique(c(as.character(data$prot1), as.character(data$prot2))))
# number the IDs in the original data frame if there are character names
data$prot1 <- match(data$prot1, my.objects)
data$prot2 <- match(data$prot2, my.objects)
# Make a matrix of the right dimensions
n <- length(my.objects)
dist_mat <- matrix(NA, n, n)
# make a matrix of the IDs
i <- as.matrix(data[-3])
# cast the distances to the matrix
dist_mat[i] <- dist_mat[i[,2:1]] <- data$distance
#cast the matrix as a distance matrix
my.dist <- as.dist(dist_mat)
print(str(dist_mat))
# write.table(as.matrix(my.dist), file=paste("./dist.txt",sep=""), row.names=FALSE, col.names=FALSE)
#calculates x, y projects for the points,
# mds%points y axis is sorted in the order of the IDs my.objects
mds = isoMDS(my.dist, k=2, maxit=1000, p=minkowski_power)
# labeling goes here, add a third colum to the mds matrix for the iteration membership
plot_df <- data.frame(x=mds$points[,1], y=mds$points[,2])
plot_df$labels <- labels$iteration[match(strtoi(rownames(plot_df)), labels$protID)]
plot_df[order(plot_df$labels, na.last=TRUE),]
# plot <- ggplot(plot_df, aes(x=x, y=y)) + geom_point()
blues20 <- colorRampPalette(brewer.pal(name="Blues", n = 9))(26)
plot <- ggplot(plot_df, aes(x=x, y=y, color=labels)) + geom_point(aes(colour = cut(labels, c(-Inf, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, Inf))), size = 2) + scale_color_manual(values=blues20[6:26])
return(plot)
}
plots <- project_distances(dist2, dist2_membership, 1)
project_distances <- function(data, labels, minkowski_power){
print(paste("Mean: ", mean(data$distance)))
print(paste("SD: ", sd(data$distance)))
# a list of the prot names in sorted order
my.objects <- sort(unique(c(as.character(data$prot1), as.character(data$prot2))))
# number the IDs in the original data frame if there are character names
data$prot1 <- match(data$prot1, my.objects)
data$prot2 <- match(data$prot2, my.objects)
# Make a matrix of the right dimensions
n <- length(my.objects)
dist_mat <- matrix(NA, n, n)
# make a matrix of the IDs
i <- as.matrix(data[-3])
# cast the distances to the matrix
dist_mat[i] <- dist_mat[i[,2:1]] <- data$distance
#cast the matrix as a distance matrix
my.dist <- as.dist(dist_mat)
print(str(dist_mat))
# write.table(as.matrix(my.dist), file=paste("./dist.txt",sep=""), row.names=FALSE, col.names=FALSE)
#calculates x, y projects for the points,
# mds%points y axis is sorted in the order of the IDs my.objects
system('bash -c "java -jar /home/dbuchan/Downloads/mdsj.jar /home/dbuchan/data.txt /home/dbuchan/data-MDS.txt"')
mds = isoMDS(my.dist, k=2, maxit=1000, p=minkowski_power)
# labeling goes here, add a third colum to the mds matrix for the iteration membership
plot_df <- data.frame(x=mds$points[,1], y=mds$points[,2])
plot_df$labels <- labels$iteration[match(strtoi(rownames(plot_df)), labels$protID)]
plot_df[order(plot_df$labels, na.last=TRUE),]
# plot <- ggplot(plot_df, aes(x=x, y=y)) + geom_point()
blues20 <- colorRampPalette(brewer.pal(name="Blues", n = 9))(26)
plot <- ggplot(plot_df, aes(x=x, y=y, color=labels)) + geom_point(aes(colour = cut(labels, c(-Inf, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, Inf))), size = 2) + scale_color_manual(values=blues20[6:26])
return(plot)
}
plots <- project_distances(dist2, dist2_membership, 1)
project_distances <- function(data, labels, minkowski_power){
print(paste("Mean: ", mean(data$distance)))
print(paste("SD: ", sd(data$distance)))
# a list of the prot names in sorted order
my.objects <- sort(unique(c(as.character(data$prot1), as.character(data$prot2))))
# number the IDs in the original data frame if there are character names
data$prot1 <- match(data$prot1, my.objects)
data$prot2 <- match(data$prot2, my.objects)
# Make a matrix of the right dimensions
n <- length(my.objects)
dist_mat <- matrix(NA, n, n)
# make a matrix of the IDs
i <- as.matrix(data[-3])
# cast the distances to the matrix
dist_mat[i] <- dist_mat[i[,2:1]] <- data$distance
#cast the matrix as a distance matrix
my.dist <- as.dist(dist_mat)
write.table(as.matrix(my.dist), file=paste("./dist.txt",sep=""), row.names=FALSE, col.names=FALSE)
#calculates x, y projects for the points,
# mds%points y axis is sorted in the order of the IDs my.objects
system('bash -c "java -jar /home/dbuchan/Downloads/mdsj.jar /home/dbuchan/data.txt /home/dbuchan/data-MDS.txt"')
mds = isoMDS(my.dist, k=2, maxit=1000, p=minkowski_power)
# labeling goes here, add a third colum to the mds matrix for the iteration membership
plot_df <- data.frame(x=mds$points[,1], y=mds$points[,2])
plot_df$labels <- labels$iteration[match(strtoi(rownames(plot_df)), labels$protID)]
plot_df[order(plot_df$labels, na.last=TRUE),]
# plot <- ggplot(plot_df, aes(x=x, y=y)) + geom_point()
blues20 <- colorRampPalette(brewer.pal(name="Blues", n = 9))(26)
plot <- ggplot(plot_df, aes(x=x, y=y, color=labels)) + geom_point(aes(colour = cut(labels, c(-Inf, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, Inf))), size = 2) + scale_color_manual(values=blues20[6:26])
return(plot)
}
plots <- project_distances(dist2, dist2_membership, 1)
project_distances <- function(data, labels, minkowski_power){
print(paste("Mean: ", mean(data$distance)))
print(paste("SD: ", sd(data$distance)))
# a list of the prot names in sorted order
my.objects <- sort(unique(c(as.character(data$prot1), as.character(data$prot2))))
# number the IDs in the original data frame if there are character names
data$prot1 <- match(data$prot1, my.objects)
data$prot2 <- match(data$prot2, my.objects)
# Make a matrix of the right dimensions
n <- length(my.objects)
dist_mat <- matrix(NA, n, n)
# make a matrix of the IDs
i <- as.matrix(data[-3])
# cast the distances to the matrix
dist_mat[i] <- dist_mat[i[,2:1]] <- data$distance
#cast the matrix as a distance matrix
my.dist <- as.dist(dist_mat)
write.table(as.matrix(my.dist), file=paste("./dist.txt",sep=""), row.names=FALSE, col.names=FALSE)
#calculates x, y projects for the points,
# mds%points y axis is sorted in the order of the IDs my.objects
system('bash -c "java -jar /home/dbuchan/Downloads/mdsj.jar /home/dbuchan/dist.txt /home/dbuchan/dist-MDS.txt"')
mds = isoMDS(my.dist, k=2, maxit=1000, p=minkowski_power)
# labeling goes here, add a third colum to the mds matrix for the iteration membership
plot_df <- data.frame(x=mds$points[,1], y=mds$points[,2])
plot_df$labels <- labels$iteration[match(strtoi(rownames(plot_df)), labels$protID)]
plot_df[order(plot_df$labels, na.last=TRUE),]
# plot <- ggplot(plot_df, aes(x=x, y=y)) + geom_point()
blues20 <- colorRampPalette(brewer.pal(name="Blues", n = 9))(26)
plot <- ggplot(plot_df, aes(x=x, y=y, color=labels)) + geom_point(aes(colour = cut(labels, c(-Inf, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, Inf))), size = 2) + scale_color_manual(values=blues20[6:26])
return(plot)
}
plots <- project_distances(dist2, dist2_membership, 1)
project_distances <- function(data, labels, minkowski_power){
print(paste("Mean: ", mean(data$distance)))
print(paste("SD: ", sd(data$distance)))
# a list of the prot names in sorted order
my.objects <- sort(unique(c(as.character(data$prot1), as.character(data$prot2))))
# number the IDs in the original data frame if there are character names
data$prot1 <- match(data$prot1, my.objects)
data$prot2 <- match(data$prot2, my.objects)
# Make a matrix of the right dimensions
n <- length(my.objects)
dist_mat <- matrix(NA, n, n)
# make a matrix of the IDs
i <- as.matrix(data[-3])
# cast the distances to the matrix
dist_mat[i] <- dist_mat[i[,2:1]] <- data$distance
#cast the matrix as a distance matrix
my.dist <- as.dist(dist_mat)
write.table(as.matrix(my.dist), file=paste("./dist.txt",sep=""), row.names=FALSE, col.names=FALSE)
#calculates x, y projects for the points,
# mds%points y axis is sorted in the order of the IDs my.objects
system('bash -c "java -jar /home/dbuchan/Downloads/mdsj.jar /home/dbuchan/dist.txt /home/dbuchan/dist-MDS.txt"')
# mds = isoMDS(my.dist, k=2, maxit=1000, p=minkowski_power)
jmds <- as.matrix(read.table("./MDS/data-MDS.txt",header=FALSE,sep=" "))
# labeling goes here, add a third colum to the mds matrix for the iteration membership
plot_df <- data.frame(x=jmds[,1], y=jmds[,2])
plot_df$labels <- labels$iteration[match(strtoi(rownames(plot_df)), labels$protID)]
plot_df[order(plot_df$labels, na.last=TRUE),]
# plot <- ggplot(plot_df, aes(x=x, y=y)) + geom_point()
blues20 <- colorRampPalette(brewer.pal(name="Blues", n = 9))(26)
plot <- ggplot(plot_df, aes(x=x, y=y, color=labels)) + geom_point(aes(colour = cut(labels, c(-Inf, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, Inf))), size = 2) + scale_color_manual(values=blues20[6:26])
return(plot)
}
plots <- project_distances(dist2, dist2_membership, 1)
project_distances <- function(data, labels, minkowski_power){
print(paste("Mean: ", mean(data$distance)))
print(paste("SD: ", sd(data$distance)))
# a list of the prot names in sorted order
my.objects <- sort(unique(c(as.character(data$prot1), as.character(data$prot2))))
# number the IDs in the original data frame if there are character names
data$prot1 <- match(data$prot1, my.objects)
data$prot2 <- match(data$prot2, my.objects)
# Make a matrix of the right dimensions
n <- length(my.objects)
dist_mat <- matrix(NA, n, n)
# make a matrix of the IDs
i <- as.matrix(data[-3])
# cast the distances to the matrix
dist_mat[i] <- dist_mat[i[,2:1]] <- data$distance
#cast the matrix as a distance matrix
my.dist <- as.dist(dist_mat)
write.table(as.matrix(my.dist), file=paste("./dist.txt",sep=""), row.names=FALSE, col.names=FALSE)
#calculates x, y projects for the points,
# mds%points y axis is sorted in the order of the IDs my.objects
system('bash -c "java -jar /home/dbuchan/Downloads/mdsj.jar /home/dbuchan/dist.txt /home/dbuchan/dist-MDS.txt"')
# mds = isoMDS(my.dist, k=2, maxit=1000, p=minkowski_power)
jmds <- as.matrix(read.table("/home/dbuchan/data-MDS.txt",header=FALSE,sep=" "))
# labeling goes here, add a third colum to the mds matrix for the iteration membership
plot_df <- data.frame(x=jmds[,1], y=jmds[,2])
plot_df$labels <- labels$iteration[match(strtoi(rownames(plot_df)), labels$protID)]
plot_df[order(plot_df$labels, na.last=TRUE),]
# plot <- ggplot(plot_df, aes(x=x, y=y)) + geom_point()
blues20 <- colorRampPalette(brewer.pal(name="Blues", n = 9))(26)
plot <- ggplot(plot_df, aes(x=x, y=y, color=labels)) + geom_point(aes(colour = cut(labels, c(-Inf, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, Inf))), size = 2) + scale_color_manual(values=blues20[6:26])
return(plot)
}
plots <- project_distances(dist2, dist2_membership, 1)
project_distances <- function(data, labels, minkowski_power){
print(paste("Mean: ", mean(data$distance)))
print(paste("SD: ", sd(data$distance)))
# a list of the prot names in sorted order
my.objects <- sort(unique(c(as.character(data$prot1), as.character(data$prot2))))
# number the IDs in the original data frame if there are character names
data$prot1 <- match(data$prot1, my.objects)
data$prot2 <- match(data$prot2, my.objects)
# Make a matrix of the right dimensions
n <- length(my.objects)
dist_mat <- matrix(NA, n, n)
# make a matrix of the IDs
i <- as.matrix(data[-3])
# cast the distances to the matrix
dist_mat[i] <- dist_mat[i[,2:1]] <- data$distance
#cast the matrix as a distance matrix
my.dist <- as.dist(dist_mat)
write.table(as.matrix(my.dist), file=paste("./dist.txt",sep=""), row.names=FALSE, col.names=FALSE)
#calculates x, y projects for the points,
# mds%points y axis is sorted in the order of the IDs my.objects
system('bash -c "java -jar /home/dbuchan/Downloads/mdsj.jar /home/dbuchan/dist.txt /home/dbuchan/dist-MDS.txt"')
# mds = isoMDS(my.dist, k=2, maxit=1000, p=minkowski_power)
jmds <- as.matrix(read.table("/home/dbuchan/dist-MDS.txt",header=FALSE,sep=" "))
# labeling goes here, add a third colum to the mds matrix for the iteration membership
plot_df <- data.frame(x=jmds[,1], y=jmds[,2])
plot_df$labels <- labels$iteration[match(strtoi(rownames(plot_df)), labels$protID)]
plot_df[order(plot_df$labels, na.last=TRUE),]
# plot <- ggplot(plot_df, aes(x=x, y=y)) + geom_point()
blues20 <- colorRampPalette(brewer.pal(name="Blues", n = 9))(26)
plot <- ggplot(plot_df, aes(x=x, y=y, color=labels)) + geom_point(aes(colour = cut(labels, c(-Inf, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, Inf))), size = 2) + scale_color_manual(values=blues20[6:26])
return(plot)
}
plots <- project_distances(dist2, dist2_membership, 1)
plots
project_distances <- function(data, labels, minkowski_power){
print(paste("Mean: ", mean(data$distance)))
print(paste("SD: ", sd(data$distance)))
# a list of the prot names in sorted order
my.objects <- sort(unique(c(as.character(data$prot1), as.character(data$prot2))))
# number the IDs in the original data frame if there are character names
data$prot1 <- match(data$prot1, my.objects)
data$prot2 <- match(data$prot2, my.objects)
# Make a matrix of the right dimensions
n <- length(my.objects)
dist_mat <- matrix(NA, n, n)
# make a matrix of the IDs
i <- as.matrix(data[-3])
# cast the distances to the matrix
dist_mat[i] <- dist_mat[i[,2:1]] <- data$distance
#cast the matrix as a distance matrix
my.dist <- as.dist(dist_mat)
write.table(as.matrix(my.dist), file=paste("./dist.txt",sep=""), row.names=FALSE, col.names=FALSE)
#calculates x, y projects for the points,
# mds%points y axis is sorted in the order of the IDs my.objects
# build plot_df with isoMDS
# mds = isoMDS(my.dist, k=2, maxit=1000, p=minkowski_power)
# plot_df <- data.frame(x=mds$points[,1], y=mds$points[,2])
# build plot_df with mdsj
write.table(as.matrix(my.dist), file=paste("./dist.txt",sep=""), row.names=FALSE, col.names=FALSE)
system('bash -c "java -jar /home/dbuchan/Downloads/mdsj.jar /home/dbuchan/dist.txt /home/dbuchan/dist-MDS.txt"')
jmds <- as.(read.table("/home/dbuchan/dist-MDS.txt",header=FALSE,sep=" "))
plot_df <- data.frame(x=jmds[,1], y=jmds[,2])
# labeling goes here, add a third colum to the mds matrix for the iteration membership
plot_df$labels <- labels$iteration[match(strtoi(rownames(plot_df)), labels$protID)]
plot_df[order(plot_df$labels, na.last=TRUE),]
# plot <- ggplot(plot_df, aes(x=x, y=y)) + geom_point()
blues20 <- colorRampPalette(brewer.pal(name="Blues", n = 9))(26)
plot <- ggplot(plot_df, aes(x=x, y=y, color=labels)) + geom_point(aes(colour = cut(labels, c(-Inf, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, Inf))), size = 2) + scale_color_manual(values=blues20[6:26])
return(plot)
}
plots <- project_distances(dist2, dist2_membership, 1)
project_distances <- function(data, labels, minkowski_power){
print(paste("Mean: ", mean(data$distance)))
print(paste("SD: ", sd(data$distance)))
# a list of the prot names in sorted order
my.objects <- sort(unique(c(as.character(data$prot1), as.character(data$prot2))))
# number the IDs in the original data frame if there are character names
data$prot1 <- match(data$prot1, my.objects)
data$prot2 <- match(data$prot2, my.objects)
# Make a matrix of the right dimensions
n <- length(my.objects)
dist_mat <- matrix(NA, n, n)
# make a matrix of the IDs
i <- as.matrix(data[-3])
# cast the distances to the matrix
dist_mat[i] <- dist_mat[i[,2:1]] <- data$distance
#cast the matrix as a distance matrix
my.dist <- as.dist(dist_mat)
write.table(as.matrix(my.dist), file=paste("./dist.txt",sep=""), row.names=FALSE, col.names=FALSE)
#calculates x, y projects for the points,
# mds%points y axis is sorted in the order of the IDs my.objects
# build plot_df with isoMDS
# mds = isoMDS(my.dist, k=2, maxit=1000, p=minkowski_power)
# plot_df <- data.frame(x=mds$points[,1], y=mds$points[,2])
# build plot_df with mdsj
write.table(as.matrix(my.dist), file=paste("./dist.txt",sep=""), row.names=FALSE, col.names=FALSE)
system('bash -c "java -jar /home/dbuchan/Downloads/mdsj.jar /home/dbuchan/dist.txt /home/dbuchan/dist-MDS.txt"')
jmds <- as.matrix(read.table("/home/dbuchan/dist-MDS.txt",header=FALSE,sep=" "))
plot_df <- data.frame(x=jmds[,1], y=jmds[,2])
# labeling goes here, add a third colum to the mds matrix for the iteration membership
plot_df$labels <- labels$iteration[match(strtoi(rownames(plot_df)), labels$protID)]
plot_df[order(plot_df$labels, na.last=TRUE),]
# plot <- ggplot(plot_df, aes(x=x, y=y)) + geom_point()
blues20 <- colorRampPalette(brewer.pal(name="Blues", n = 9))(26)
plot <- ggplot(plot_df, aes(x=x, y=y, color=labels)) + geom_point(aes(colour = cut(labels, c(-Inf, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, Inf))), size = 2) + scale_color_manual(values=blues20[6:26])
return(plot)
}
plots <- project_distances(dist2, dist2_membership, 1)
plots
plots
ggsave("/home/dbuchan/Projects/profile_drift/plots/dist_experiment_20_iterations.png", dpi=100, width=800, height=600, units="px")
library(ggplot2)
ggsave("/home/dbuchan/Projects/profile_drift/plots/dist_experiment_20_iterations.png", dpi=100, width=800, height=600, units="px")
library(ggplot2)
library(modeest)
cath_hfamily_distances <- read.csv("/home/dbuchan/Projects/drift/average_cath_distances.csv", header=F)
colnames(cath_hfamily_distances) <- c("dist_file", "blosum_distance")
cath_hfamily_distances <- cath_hfamily_distances[-c(1883),]
mean(cath_hfamily_distances$blosum_distance)
median(cath_hfamily_distances$blosum_distance)
mode(cath_hfamily_distances$blosum_distance)
mlv(cath_hfamily_distances$blosum_distance, method = "meanshift") # 1.6
ggplot(cath_hfamily_distances, aes(x=blosum_distance)) + geom_histogram()
library(ggplot2)
library(reshape2)
distance2_500_1000 <- read.csv("/home/dbuchan/Projects/profile_drift/RAxML_distances/drift_experiment/average_distances2_500cluster_1000cluster.csv", header=T)
View(distance2_500_1000)
ggplot(distance2_500_1000, aes(x=iteration, y=tot_distance) + geom_point() + geom_line()
)
ggplot(distance2_500_1000, aes(x=iteration, y=tot_distance)) + geom_point() + geom_line()
ggplot(distance2_500_1000, aes(x=iteration, y=member_count)) + geom_point() + geom_line()
ggplot(distance2_500_1000, aes(x=iteration, y=average_distance)) + geom_point() + geom_line()
ggplot(distance2_500_1000, aes(x=iteration, y=average_distance)) + geom_point() + geom_line()
ggplot(distance2_500_1000, aes(x=iteration, y=ave_distance)) + geom_point() + geom_line()
average_distances <- read.csv("/home/dbuchan/Projects/profile_drift/RAxML_distances/random_pathing/blasts/average_distances.csv", header=T)
average_distances$accumulated <- c(average_distances[1,2], 0, 0,0,0)
average_distances[2,3] <- (average_distances[1,3] + average_distances[2,2])/2
average_distances[3,3] <- (average_distances[2,3] + average_distances[3,2])/2
average_distances[4,3] <- (average_distances[3,3] + average_distances[4,2])/2
average_distances[5,3] <- (average_distances[4,3] + average_distances[5,2])/2
ggplot(average_distances, aes(x=iteration, y=ave_distance)) + geom_line()
ggplot(average_distances, aes(x=iteration, y=accumulated)) + geom_line()
distances2 <- read.csv("/home/dbuchan/Projects/profile_drift/RAxML_distances/distance_experiment/average_distances2.csv", header=T)
distances5 <- read.csv("/home/dbuchan/Projects/profile_drift/RAxML_distances/distance_experiment/average_distances5.csv", header=T)
distances10 <- read.csv("/home/dbuchan/Projects/profile_drift/RAxML_distances/distance_experiment/average_distances10.csv", header=T)
distances20 <- read.csv("/home/dbuchan/Projects/profile_drift/RAxML_distances/distance_experiment/average_distances20.csv", header=T)
distances30 <- read.csv("/home/dbuchan/Projects/profile_drift/RAxML_distances/distance_experiment/average_distances30.csv", header=T)
distances40 <- read.csv("/home/dbuchan/Projects/profile_drift/RAxML_distances/distance_experiment/average_distances40.csv", header=T)
distances50 <- read.csv("/home/dbuchan/Projects/profile_drift/RAxML_distances/distance_experiment/average_distances50.csv", header=T)
all_distances <- data.frame(iteration=distances2$iteration, dist2=distances2$ave_distance, dist5=distances5$ave_distance, dist10=distances10$ave_distance, dist20=distances20$ave_distance, dist30=distances30$ave_distance, dist40=distances40$ave_distance, dist50=distances50$ave_distance)
plot_df <- melt(all_distances, id.vars="iteration")
ggplot(plot_df, aes(x=iteration, y=value, col=variable)) + geom_point() + geom_line()
ggsave("/home/dbuchan/Projects/profile_drift/plots/family_growth_at_ave_distances.png", dpi=100, width=800, height=600, units="px")
tot_distances <- data.frame(iteration=distances2$iteration, tot2=distances2$tot_distance, tot5=distances5$tot_distance, tot10=distances10$tot_distance, tot20=distances20$tot_distance, tot30=distances30$tot_distance, tot40=distances40$tot_distance, tot50=distances50$tot_distance)
plot_df <- melt(tot_distances, id.vars="iteration")
ggplot(plot_df, aes(x=iteration, y=value, col=variable)) + geom_point() + geom_line()
ggsave("/home/dbuchan/Projects/profile_drift/plots/family_growth_at_tot_distances.png", dpi=100, width=800, height=600, units="px")
members <- data.frame(iteration=distances2$iteration, memb2=distances2$member_count, memb5=distances5$member_count, memb10=distances10$member_count, memb20=distances20$member_count, memb30=distances30$member_count, memb40=distances40$member_count, memb50=distances50$member_count)
plot_df <- melt(members, id.vars="iteration")
ggplot(plot_df, aes(x=iteration, y=value, col=variable)) + geom_point() + geom_line()
ggsave("/home/dbuchan/Projects/profile_drift/plots/members_growth_at_iteration.png", dpi=100, width=800, height=600, units="px")
distance2_500_1000 <- read.csv("/home/dbuchan/Projects/profile_drift/RAxML_distances/drift_experiment/average_distances2_500cluster_1000cluster.csv", header=T)
library(ggplot2)
library(reshape2)
distance2_500_1000 <- read.csv("/home/dbuchan/Projects/profile_drift/RAxML_distances/drift_experiment/average_distances30_7cluster_17cluster.csv", header=T)
ggplot(distance2_500_1000, aes(x=iteration, y=tot_distance)) + geom_point() + geom_line()
ggplot(distance2_500_1000, aes(x=iteration, y=member_count)) + geom_point() + geom_line()
ggplot(distance2_500_1000, aes(x=iteration, y=ave_distance)) + geom_point() + geom_line()
distance2_500_1000 <- read.csv("/home/dbuchan/Projects/profile_drift/RAxML_distances/drift_experiment/average_distances30_7cluster_70cluster.csv", header=T)
ggplot(distance2_500_1000, aes(x=iteration, y=tot_distance)) + geom_point() + geom_line()
ggplot(distance2_500_1000, aes(x=iteration, y=member_count)) + geom_point() + geom_line()
ggplot(distance2_500_1000, aes(x=iteration, y=ave_distance)) + geom_point() + geom_line()
distance2_500_1000 <- read.csv("/home/dbuchan/Projects/profile_drift/RAxML_distances/drift_experiment/distance50_4cluster_24cluster.fa", header=T)
ggplot(distance2_500_1000, aes(x=iteration, y=tot_distance)) + geom_point() + geom_line()
ggplot(distance2_500_1000, aes(x=iteration, y=tot_distance)) + geom_point() + geom_line()
distance2_500_1000 <- read.csv("/home/dbuchan/Projects/profile_drift/RAxML_distances/drift_experiment/distance50_4cluster_24cluster.fa", header=T)
ggplot(distance2_500_1000, aes(x=iteration, y=tot_distance)) + geom_point() + geom_line()
distance2_500_1000 <- read.csv("/home/dbuchan/Projects/profile_drift/RAxML_distances/drift_experiment/distance50_4cluster_24cluster.fa", header=T)
View(distance2_500_1000)
View(distance2_500_1000)
s
distance2_500_1000 <- read.csv("/home/dbuchan/Projects/profile_drift/RAxML_distances/drift_experiment/average_distances50_4cluster_24cluster.csv", header=T)
ggplot(distance2_500_1000, aes(x=iteration, y=tot_distance)) + geom_point() + geom_line()
ggplot(distance2_500_1000, aes(x=iteration, y=member_count)) + geom_point() + geom_line()
ggplot(distance2_500_1000, aes(x=iteration, y=ave_distance)) + geom_point() + geom_line()
average_distances <- read.csv("/home/dbuchan/Projects/profile_drift/RAxML_distances/drift_experiment/distance30_7cluster_26cluster_membership.csv", header=T)
rm(average_distances)
member_count <- read.csv("/home/dbuchan/Projects/profile_drift/RAxML_distances/drift_experiment/distance30_7cluster_26cluster_membership.csv", header=T)
View(member_count)
member_count <- read.csv("/home/dbuchan/Projects/profile_drift/RAxML_distances/drift_experiment/distance30_7cluster_26cluster.membercount", header=T)
library(ggplot2)
library(reshape2)
ggplot(data=memeber_count, aes(x=iteration, y=background)) + geom_bar(stat="identity")
ggplot(data=member_count, aes(x=iteration, y=background)) + geom_bar(stat="identity")
gather(member_count, state, value, background:first:second, factor_key=TRUE)
library(tidyr)
library(tidyr)
gather(member_count, state, value, background:first:second, factor_key=TRUE)
gather(member_count, class, value, background:first:second, factor_key=TRUE)
long_counts <- gather(member_count, class, value, background:first:second, factor_key=TRUE)
ggplot(data=member_count, aes(x=iteration, y=value, fill=class)) + geom_bar(stat="identity")
ggplot(data=long_counts, aes(x=iteration, y=value, fill=class)) + geom_bar(stat="identity")
ggplot(data=long_counts, aes(x=iteration, y=value, fill=class)) + geom_bar(stat="identity", position=position_dodge())
ggplot(data=long_counts, aes(x=iteration, y=value, fill=class)) + geom_bar(stat="identity")
files <- list.files(pattern = "\\.membercount$")
files <- list.files(pattern = "/home/dbuchan/Projects/profile_drift/RAxML_distances/drift_experiment/\\.membercount$")
files <- list.files(pattern = "/home/dbuchan/Projects/profile_drift/RAxML_distances/drift_experiment/\\.membercount$")
files <- list.files(pattern = "/home/dbuchan/Projects/profile_drift/RAxML_distances/drift_experiment/.+\\.membercount$")
files <- Sys.glob(pattern = "/home/dbuchan/Projects/profile_drift/RAxML_distances/drift_experiment/*.membercount")
files <- Sys.glob("/home/dbuchan/Projects/profile_drift/RAxML_distances/drift_experiment/*.membercount")
head(files)
draw_member_chart <- function(file){
member_count <- read.csv(file, header=T)
long_counts <- gather(member_count, class, value, background:first:second, factor_key=TRUE)
ggplot(data=long_counts, aes(x=iteration, y=value, fill=class)) + geom_bar(stat="identity")
}
lapply(files, draw_member_chart)
setwd("/home/dbuchan/Projects/profile_drift/RAxML_distances/drift_experiment/")
files <- Sys.glob("/*.membercount")
setwd("/home/dbuchan/Projects/profile_drift/RAxML_distances/drift_experiment/")
files <- Sys.glob("/*.membercount")
head(files)
setwd("/home/dbuchan/Projects/profile_drift/RAxML_distances/drift_experiment/")
files <- Sys.glob("*.membercount")
head(files)
draw_member_chart <- function(file){
member_count <- read.csv(file, header=T)
long_counts <- gather(member_count, class, count, background:first:second, factor_key=TRUE)
ggplot(data=long_counts, aes(x=iteration, y=count, fill=class)) + geom_bar(stat="identity")+labs(title=file)
}
lapply(files, draw_member_chart)
